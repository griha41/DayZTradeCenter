@model DayZTradeCenter.UI.Web.Models.ProfileViewModel

@{
    ViewBag.Title = "Edit";
}

<div class="page-header">
    <h1>
        Profile
        @if (Model.IsAdmin)
        {
            <small>Admin</small>
        }
    </h1>
    
    @if (!User.IsInRole("Administrator"))
    {
        @Html.DisplayNameFor(model => model.Reputation)
        <span class="badge">@Html.DisplayFor(model => model.Reputation)</span>
    }
</div>

@if (!User.IsInRole("Administrator"))
{
    <div class="row">
        <div class="col-md-6">
            <div class="panel panel-success">
                <div class="panel-heading">
                    <h3 class="panel-title">My trades</h3>
                </div>
                <div class="panel-body">
                    The list of all your <strong>trades</strong>.
                </div>
                <ul class="list-group">
                    @foreach (var trade in Model.MyTrades)
                    {
                        <li class="list-group-item">
                            @if (trade.Completed)
                            {
                                <a href="@Url.Action("TradeCompleted", "Trades", new { id = trade.Id })">@trade.Id</a>
                            }
                            else if (trade.IsClosed)
                            {
                                <a href="@Url.Action("ExchangeManagement", "Trades", new { id = trade.Id })">@trade.Id</a>
                            }
                            else
                            {
                                <a href="@Url.Action("Details", "Trades", new { id = trade.Id })">@trade.Id</a>
                            }
                            ,
                            <strong>H</strong> @trade.Have.First().Name
                            <strong>W</strong> @trade.Want.First().Name
                            @if (trade.Completed)
                            {
                                @:COMPLETED: leave feedback!
                            }
                            else if (trade.IsClosed)
                            {
                                @:CLOSED: winner = @trade.Winner
                            }
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div class="col-md-6">
            <div class="panel panel-info">
                <div class="panel-heading">
                    <h3 class="panel-title">My offers</h3>
                </div>
                <div class="panel-body">
                    The list of all the trades you've made an <strong>offer</strong> to.
                </div>
                <ul class="list-group">
                    @foreach (var trade in Model.MyOffers)
                    {
                        <li class="list-group-item">
                            <a href="@Url.Action("Details", "Trades", new { id = trade.Id })">@trade.Id</a>
                            <strong>H</strong> @trade.Have.First().Name
                            <strong>W</strong> @trade.Want.First().Name
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title">Past activities</h3>
        </div>
        <div class="panel-body">
            The list of all your past activities. <strong>Coming soon!</strong>
        </div>
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit your profile:</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}