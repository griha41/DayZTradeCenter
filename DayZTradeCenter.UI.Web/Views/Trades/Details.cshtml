@using DayZTradeCenter.DomainModel.Entities
@using Microsoft.AspNet.Identity

@model Trade

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Trade</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.CreationDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreationDate)
        </dd>
    </dl>
    
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Have)
        </dt>

        <dd>
            <ul>
                @foreach (var itemDetail in Model.Have)
                {
                    <li>
                        @itemDetail.Item.Name
                        @itemDetail.Quantity
                        @itemDetail.Condition
                    </li>
                } 
            </ul>
        </dd>
    </dl>
    
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Want)
        </dt>

        <dd>
            <ul>
                @foreach (var itemDetail in Model.Want)
                {
                    <li>
                        @itemDetail.Item.Name
                        @itemDetail.Quantity
                        @itemDetail.Condition
                    </li>
                }
            </ul>
        </dd>
    </dl>

    @if (Model.Owner.Id == User.Identity.GetUserId())
    {
        <ul style="list-style-type: none">
            @foreach (var offer in Model.Offers)
            {
                <li>
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <strong>Reputation:</strong>
                            @Html.Partial("_ReputationWidget", offer.GetReputation())

                            @if (offer.Feedbacks != null && offer.Feedbacks.Any())
                            {
                                <br /><br />
                                <span>Last 3 transactions (@Html.ActionLink("Complete history", "CompleteHistory", "Profile", new { userId = offer.Id }, null)): </span>
                                <br />
                                <ul>
                                    @foreach (var feedback in offer.Feedbacks.OrderByDescending(f => f.Timestamp).Take(3))
                                    {
                                        <li>
                                            Score: @feedback.Score, @feedback.Timestamp
                                        </li>
                                    }
                                </ul>
                            }
                            <br />
                            <a href="@Url.Action("ChooseWinner", new {tradeId = Model.Id, userId = offer.Id})">Selects as winner</a>
                        </div>
                    </div>
                </li>
            }
        </ul>
    }
    else if (Model.State == TradeStates.Active)
    {
        <a href="@Url.Action("Offer", "Trades", new { tradeId = Model.Id })"
           class="btn btn-primary" role="button">Offer</a>
    }
    else if (Model.Winner != null && Model.Winner.Id == User.Identity.GetUserId())
    {
        @: You have won this trade. Congratulations! Expect a message from the trade owner.
    }
    else if (Model.State == TradeStates.Closed)
    {
        @: You have lost this trade. We're sorry for you!
    }
</div>
<p>
    @Html.ActionLink("Back to List", "Index")
</p>
